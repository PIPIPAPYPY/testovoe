# Makefile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–∞–º–∏

.PHONY: help test test-quick test-postgresql test-all-postgresql test-performance test-coverage clean

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
help:
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  test              - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã –Ω–∞ SQLite"
	@echo "  test-quick        - –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è PR (Unit + Smoke Feature)"
	@echo "  test-postgresql   - –¢–µ—Å—Ç—ã –Ω–∞ PostgreSQL (—Ç—Ä–µ–±—É–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã–π PostgreSQL)"
	@echo "  test-all-postgresql - –¢–µ—Å—Ç—ã –Ω–∞ –≤—Å–µ—Ö –≤–µ—Ä—Å–∏—è—Ö PostgreSQL —á–µ—Ä–µ–∑ Docker"
	@echo "  test-performance  - –¢–µ—Å—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
	@echo "  test-coverage     - –¢–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞"
	@echo "  clean             - –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"

# –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ç–µ—Å—Ç—ã –Ω–∞ SQLite
test:
	@echo "üß™ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –Ω–∞ SQLite..."
	php artisan test

# –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è PR
test-quick:
	@echo "‚ö° –ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä—ã—Ö —Ç–µ—Å—Ç–æ–≤ –¥–ª—è PR..."
	@chmod +x scripts/test-quick.sh
	./scripts/test-quick.sh

# –¢–µ—Å—Ç—ã –Ω–∞ PostgreSQL (—Ç—Ä–µ–±—É–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã–π PostgreSQL)
test-postgresql:
	@echo "üêò –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –Ω–∞ PostgreSQL..."
	@chmod +x scripts/test-postgresql.sh
	./scripts/test-postgresql.sh

# –¢–µ—Å—Ç—ã –Ω–∞ –≤—Å–µ—Ö –≤–µ—Ä—Å–∏—è—Ö PostgreSQL —á–µ—Ä–µ–∑ Docker
test-all-postgresql:
	@echo "üêò –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –Ω–∞ –≤—Å–µ—Ö –≤–µ—Ä—Å–∏—è—Ö PostgreSQL..."
	@chmod +x scripts/test-all-postgresql.sh
	./scripts/test-all-postgresql.sh

# –¢–µ—Å—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
test-performance:
	@echo "‚ö° –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."
	php artisan test --testsuite=Performance

# –¢–µ—Å—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
test-security:
	@echo "üîí –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
	php artisan test --testsuite=Security

# –¢–µ—Å—Ç—ã RBAC/–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
test-rbac:
	@echo "üõ°Ô∏è –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ RBAC/–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."
	php artisan test --filter="RbacTest|DataAccessSecurityTest|ApiAuthorizationTest|TokenSecurityTest"

# –¢–µ—Å—Ç—ã –≤–Ω–µ—à–Ω–∏—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
test-external:
	@echo "üåê –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤–Ω–µ—à–Ω–∏—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π..."
	php artisan test --testsuite=External

# –¢–µ—Å—Ç—ã —Å HTTP –º–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ–º
test-mocking:
	@echo "üé≠ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å HTTP –º–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ–º..."
	php artisan test --filter="NotificationServiceTest|AnalyticsProviderServiceTest|ErrorScenarioTest|VcrFixtureTest"

# –¢–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞
test-coverage:
	@echo "üìä –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞..."
	php artisan test --coverage --coverage-html=coverage

# –û—á–∏—Å—Ç–∫–∞
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
	php artisan cache:clear
	php artisan config:clear
	php artisan route:clear
	php artisan view:clear
	rm -rf storage/framework/cache/*
	rm -rf storage/framework/sessions/*
	rm -rf storage/framework/views/*
	rm -rf .phpunit.result.cache
	rm -rf coverage

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install:
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	composer install
	npm install

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
setup: install
	@echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
	php -r "file_exists('.env') || copy('.env.example', '.env');"
	php artisan key:generate
	php artisan migrate
	@chmod +x scripts/*.sh

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	php artisan serve

# –ó–∞–ø—É—Å–∫ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
docker-test-up:
	@echo "üê≥ –ó–∞–ø—É—Å–∫ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
	docker-compose -f docker-compose.test.yml up -d

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
docker-test-down:
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
	docker-compose -f docker-compose.test.yml down

# –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è
docker-test-clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
	docker-compose -f docker-compose.test.yml down -v
	docker system prune -f
