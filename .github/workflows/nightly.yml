name: Nightly Tests

on:
  schedule:
    # Запуск каждый день в 2:00 UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Позволяет запускать вручную

jobs:
  nightly-postgresql-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [8.2, 8.3]
        postgres-version: [13, 14, 15, 16]
        test-suite: [Unit, Feature]
    
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: testing
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_pgsql, bcmath, soap, intl, gd, exif, iconv
        coverage: xdebug
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    
    - name: Generate key
      run: php artisan key:generate
    
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    
    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
    
    - name: Create Database
      run: |
        PGPASSWORD=postgres createdb -h localhost -U postgres -T template0 testing_nightly_${{ matrix.postgres-version }}_${{ matrix.test-suite }}
    
    - name: Execute ${{ matrix.test-suite }} Tests
      run: php artisan test --testsuite=${{ matrix.test-suite }} --coverage
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: testing_nightly_${{ matrix.postgres-version }}_${{ matrix.test-suite }}
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
    
    - name: Upload Coverage Reports
      uses: codecov/codecov-action@v3
      if: matrix.test-suite == 'Feature'
      with:
        file: ./coverage.xml
        flags: nightly,postgresql-${{ matrix.postgres-version }},php-${{ matrix.php-version }}
        name: nightly-coverage-${{ matrix.postgres-version }}-${{ matrix.php-version }}



